version: '3.1'

volumes:
  # Store bot data in volume
  telegram-logging-bot-data:
  redis-data-local:

networks:
  # Network is required to access redis instance without knowing it's ip
  my_net:

services:
  telegram-logging-bot:
    image: bogdandm/telegramloggingbot:dev # or :latest or :release
    environment:
      - TELEGRAM_TOKEN=/run/secrets/telegram-logging-bot-token
      - TELEGRAM_ACCESS_PASSWORD=/run/secrets/telegram-logging-bot-password
      # - CONFIG_PATH=<your_path>
    volumes:
      - telegram-logging-bot-data:/opt/telegram-logging-bot-data
    working_dir: /opt/telegram-logging-bot-data
    container_name: test-telegram-logging-bot
    networks:
      - my_net
    depends_on:
      - "redis"
    entrypoint: python -m telegram_logging.bot
    secrets:
      - telegram-logging-bot-token
      - telegram-logging-bot-password

  redis:
    image: redis:latest
    command: ["redis-server", "--port", "6379"]
    container_name: test-redis
    networks:
      my_net:
        aliases:
          - redis
    ports:
      - "127.0.0.1:6385:6379"
    expose:
      - "6379"
    volumes:
      - redis-data-local:/data

secrets:
  telegram-logging-bot-token:
    file: ~/docker-secrets/telegram-logging-bot-token
  telegram-logging-bot-password:
    file: ~/docker-secrets/telegram-logging-bot-password
